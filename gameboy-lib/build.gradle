plugins {
    id 'org.jetbrains.kotlin.multiplatform' version '1.6.10'
    id 'org.jetbrains.dokka' version '1.4.10.2'
    id 'maven-publish'
    id 'signing'
}

repositories {
    mavenCentral()
    maven {
        url "https://s01.oss.sonatype.org/content/repositories/snapshots"
    }
}

group = "nl.stanroelofs"
archivesBaseName = "gameboy-lib"
version = "1.0.4-SNAPSHOT"
ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

kotlin {
    jvm {
        compilations.all {
            kotlinOptions.jvmTarget = '1.8'
        }
        withJava()
        testRuns["test"].executionTask.configure {
            useJUnitPlatform()
        }
    }
    js(BOTH) {
        browser {
            commonWebpackConfig {
                cssSupport.enabled = true
            }
        }
    }
    def hostOs = System.getProperty("os.name")
    def isMingwX64 = hostOs.startsWith("Windows")
    def nativeTarget
    if (hostOs == "Mac OS X") nativeTarget = macosX64('native')
    else if (hostOs == "Linux") nativeTarget = linuxX64("native")
    else if (isMingwX64) nativeTarget = mingwX64("native")
    else throw new GradleException("Host OS is not supported in Kotlin/Native.")


    sourceSets {
        commonMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.6.10'
            }
        }
        commonTest {
            dependencies {
                implementation kotlin("test")
            }
        }
        jvmTest {
            dependencies {
                implementation "nl.stanroelofs:minilog:1.0.1-SNAPSHOT"
            }
        }
    }
}

test {
    useJUnitPlatform()
}

// Jar files
dokkaJavadoc {
    outputDirectory = javadoc.destinationDir
    inputs.dir 'src/main/kotlin'
    doFirst {
        file(outputDirectory).deleteRecursively()
    }
}

java {
    withSourcesJar()
    withJavadocJar()
}

// Publishing
publishing {
    repositories {
        maven {
            def releaseRepo = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotRepo = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            url = isReleaseVersion ? releaseRepo : snapshotRepo
            credentials {
                username = project.hasProperty('nexusUsername') ? nexusUsername : "Unknown user"
                password = project.hasProperty('nexusPassword') ? nexusPassword : "Unknown password"
            }
        }
    }

    publications {
        withType(MavenPublication) {
            pom {
                name = 'Gameboy library'
                description = 'A gameboy library'
                url = 'https://github.com/stan-roelofs/Kotlin-Gameboy-Emulator/'
                // from components.java
                // artifact(dokkaJavadoc)
                licenses {
                    license {
                        name = 'GPL-v3.0'
                        url = 'http://www.gnu.org/licenses/gpl-3.0.txt'
                    }
                }
                scm {
                    connection = 'scm:git:git@github.com/stan-roelofs/Kotlin-Gameboy-Emulator.git'
                    developerConnection = 'scm:git:git@github.com/stan-roelofs/Kotlin-Gameboy-Emulator.git'
                    url = 'https://github.com/stan-roelofs/Kotlin-Gameboy-Emulator/'
                }
                developers {
                    developer {
                        id = 'stan-roelofs'
                        name ='Stan Roelofs'
                        email = 'stan@stanroelofs.nl'
                    }
                }
            }
        }
    }
}

// Signing artifacts
signing {
    sign publishing.publications
}
tasks.withType(Sign) {
    onlyIf { isReleaseVersion }
}
